package Datastructures;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

public class ReverseAlphabets {
    public static void main(String[] args) {
        String sentence = "Hello world this is a test";
        String reversedSentence = reverseAlphabets(sentence);
        System.out.println(reversedSentence);
    }

    public static String reverseAlphabets(String sentence) {
        // Split the sentence into words
        String[] words = sentence.split(" ");
        
        // Reverse the characters in each word
        List<String> reversedWords = Arrays.stream(words)
                                           .map(ReverseAlphabets::reverseString)
                                           .collect(Collectors.toList());
        
        // Join the reversed words back into a sentence
        return String.join(" ", reversedWords);
    }

    private static String reverseString(String word) {
        List<Character> characters = word.chars()
                                         .mapToObj(c -> (char) c)
                                         .collect(Collectors.toList());
        Collections.reverse(characters);
        StringBuilder reversedWord = new StringBuilder(characters.size());
        for (char c : characters) {
            reversedWord.append(c);
        }
        return reversedWord.toString();
    }
}
